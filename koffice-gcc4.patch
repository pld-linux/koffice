--- koffice-1.4.2/kexi/migration/mysql/mysqlmigrate.h.orig	2005-10-05 12:25:13.000000000 +0200
+++ koffice-1.4.2/kexi/migration/mysql/mysqlmigrate.h	2006-03-21 22:36:03.000000000 +0100
@@ -60,7 +60,7 @@
 			~MySQLMigrate();
 			//Constructor
 			MySQLMigrate();
-			MySQLMigrate::MySQLMigrate(QObject *parent, const char *name, const QStringList& args = QStringList());
+			MySQLMigrate(QObject *parent, const char *name, const QStringList& args = QStringList());
 			
 			KexiDB::Field::Type type(const QString& table, const MYSQL_FIELD* t);
 			
@@ -69,8 +69,8 @@
 			
 			QStringList examineEnumField(const QString& table,
 			                             const MYSQL_FIELD* fld);
-			void MySQLMigrate::getConstraints(int mysqlConstraints, KexiDB::Field* fld);
-			void MySQLMigrate::getOptions(int flags, KexiDB::Field* fld);
+			void getConstraints(int mysqlConstraints, KexiDB::Field* fld);
+			void getOptions(int flags, KexiDB::Field* fld);
 
 		/*! driver's static version information, it is automatically implemented
 		 in implementation using KEXIDB_DRIVER macro (see driver_p.h) */
--- koffice-1.4.2/krita/core/kis_clipboard.h.orig	2005-10-05 12:27:05.000000000 +0200
+++ koffice-1.4.2/krita/core/kis_clipboard.h	2006-03-21 22:02:19.000000000 +0100
@@ -35,7 +35,7 @@
 
 public:
 
-	virtual KisClipboard::~KisClipboard();
+	virtual ~KisClipboard();
 
 	static KisClipboard* instance();
 
--- koffice-1.4.2/krita/core/kis_filter_registry.h.orig	2006-03-21 22:01:52.000000000 +0100
+++ koffice-1.4.2/krita/core/kis_filter_registry.h	2006-03-21 21:59:53.000000000 +0100
@@ -26,7 +26,6 @@
 #include "kis_types.h"
 #include "kis_generic_registry.h"
 #include "kaction.h"
-#include "kis_filter.h"
 
 class QString;
 class KisView;
--- koffice-1.4.2/kspread/kspread_cell.h.orig	2005-10-05 12:31:33.000000000 +0200
+++ koffice-1.4.2/kspread/kspread_cell.h	2006-03-21 22:16:04.000000000 +0100
@@ -596,7 +596,7 @@
      *
      * @return the cell that decides the format for the cell in question.
      */
-    KSpreadCell *KSpreadCell::ultimateObscuringCell() const;
+    KSpreadCell *ultimateObscuringCell() const;
 
     /**
      * @return the obscuring cell list (might be empty)
